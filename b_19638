import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.PriorityQueue;

public class b_19638 {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        String[] input = br.readLine().split(" ");
        int N = Integer.parseInt(input[0]);  // 몬스터 수
        int H = Integer.parseInt(input[1]);  // 센티의 키
        int T = Integer.parseInt(input[2]);  // 마법의 뿅망치 사용 가능 횟수

        PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> b - a);  // 최대 힙

        for (int i = 0; i < N; i++) {
            pq.add(Integer.parseInt(br.readLine()));
        }

        int count = 0;
        boolean success = false;

        while (T-- > 0) {
            int tallest = pq.poll();
            if (tallest < H) {
                success = true;
                break;
            }
            if (tallest == 1) {  // 더 이상 줄일 수 없을 때
                pq.add(tallest);
                break;
            }
            pq.add(tallest / 2);
            count++;
        }

        if (!success && pq.peek() < H) {
            success = true;
        }

        if (success) {
            System.out.println("YES");
            System.out.println(count);
        } else {
            System.out.println("NO");
            System.out.println(pq.peek());
        }
    }
}
